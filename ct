#!/usr/bin/env ruby
# ct - count files and directories
# Copyright (C) 2013 Hans-Nikolai Viessmann
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
require 'getoptlong'

VERSION = 0.5

def all_count
	list = Dir.glob("{*,.*}") - [".",".."]
	puts "IN - #{Dir.pwd}", "---> #{list}" if $ver
	count = list.length
	return all_rec_count(count) if $rec and count > 0
	count
end

def dir_count
	list = Dir.glob("{*,.*}") - [".",".."]
	puts "IN - #{Dir.pwd}", "---> #{list}" if $ver
	count = list.count{|obj| File.directory?(obj) and not File.symlink?(obj)}
	return dir_rec_count(count) if $rec and count > 0
	count
end

def fil_count
	list = Dir.glob("{*,.*}") - [".",".."]
	puts "IN - #{Dir.pwd}", "---> #{list}" if $ver
	list.count{|obj| File.file?(obj)}
end

def sym_count
	list = Dir.glob("{*,.*}") - [".",".."]
	puts "IN - #{Dir.pwd}", "---> #{list}" if $ver
	list.count{|obj| File.symlink?(obj)}
end

def dir_rec_count(count)
	list = Dir.glob("{*,.*}") - [".",".."]
	puts "IN - #{Dir.pwd}", "---> #{list}" if $ver
	list.select{|obj| File.directory?(obj) and not File.symlink?(obj)}.each do |dir|
		Dir.chdir(dir) do
			count += dir_count
		end
	end
	count
end

def all_rec_count(count)
	list = Dir.glob("{*,.*}") - [".",".."]
	list.each do |objs|
		if File.directory?(objs) and not File.symlink?(objs)
			Dir.chdir(objs) do
				count += all_count
			end
		end
	end
	count
end

def count(path, type)
	Dir.chdir(path) do
		case type
			when 0
				all_count
			when 1
				fil_count
			when 2
				dir_count
			when 3
				sym_count
		end
	end
end

opts = GetoptLong.new(
	['--help', '-h', GetoptLong::NO_ARGUMENT],
	['--recursive', '-r', GetoptLong::NO_ARGUMENT],
	['--verbose', '-v', GetoptLong::NO_ARGUMENT],
	['--files', GetoptLong::NO_ARGUMENT],
	['--dirs', GetoptLong::NO_ARGUMENT],
	['--syms', GetoptLong::NO_ARGUMENT],
	['--version', '-V', GetoptLong::NO_ARGUMENT]
)

$rec = false
$ver = false
cho = 0

opts.each do |opt, arg|
	case opt
	when '--help'
		puts <<-EOF
ct Copyright (C) 2013 Hans-Nikolai Viessmann
This program comes with ABSOLUTELY NO WARRANTY!

Usage: ct [OPTION] ... DIR

DESCRIPTION: Count the number of files and directories within DIR

OPTIONS:
  -h, --help		show this message
  -v, --verbose		verbose
  -r, --recursive	recursively count directories
  --files		return only file count
  --dirs		return only directory count
  --syms		return only symbolic link count
  -V, --version		print version

TESTED ON:
	Arch Linux x86_64
		EOF
		exit 0
	when '--recursive'
		$rec = true
	when '--verbose'
		$ver = true
	when '--files'
		cho = 1
	when '--dirs'
		cho = 2
	when '--syms'
		cho = 3
	when '--version'
		puts "ct #{VERSION}"
		exit 0
	end
end

if ARGV.length != 1
	puts "No arguments given. Try '--help' for options."
	exit 125
end

path = ARGV.shift

if not File.directory?(path)
	puts "Invalid path given -- #{path}"
	exit 100
end

path = File.realdirpath(path)

puts "GO - #{path}" if $ver

puts count(path, cho)
